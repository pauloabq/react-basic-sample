{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"kOAEMA,EAAc,WAChB,OACI,+BACA,4BACI,oCACA,mCACA,yCAMNC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAU,kBAAMT,EAAMU,gBAAgBL,KAA9C,eAKhB,OAAO,+BAAQJ,IAeJU,E,uKAXF,IAAD,EACuCC,KAAKZ,MAAxCE,EADJ,EACIA,cAAeQ,EADnB,EACmBA,gBACvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GANtDG,a,OCeLC,E,4MAzCXC,aAAe,CACXR,KAAM,GACNC,IAAK,I,EAGTQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAS,IAAD,EACGA,EAAMC,OAArBZ,EADY,EACZA,KAAMa,EADM,EACNA,MACb,EAAKC,SAAL,eAAiBd,EAAOa,K,EAG5BE,WAAa,WACT,EAAKtB,MAAMuB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGd,IAAD,EACgBH,KAAKI,MAAlBT,EADH,EACGA,KAAMC,EADT,EACSA,IACb,OACI,8BACI,2BAAOgB,QAAQ,QAAf,QACA,2BACAC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eACnB,2BAAOO,QAAQ,OAAf,OACA,2BACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eACnB,2BAAOQ,KAAK,SAASL,MAAM,SAASX,QAASG,KAAKU,kB,GApC3CT,aCuDJe,E,4MAnDXZ,MAAQ,CACJa,WAAY,I,EAiBhBnB,gBAAkB,SAAAL,GAAU,IAChBwB,EAAe,EAAKb,MAApBa,WACR,EAAKR,SAAS,CACVQ,WAAaA,EAAWC,QAAO,SAACC,EAAWC,GACvC,OAAOA,IAAM3B,Q,EAOzBkB,aAAe,SAAAQ,GACX,IAAGA,EAAUxB,KAGT,OAAO,KAFP,EAAKc,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,uDAMtD,IACGF,EAAejB,KAAKI,MAApBa,WACR,OACI,yBAAKI,UAAU,aACX,8CACA,oEACA,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBE,KAAKF,kBACxD,8CACA,kBAAC,EAAD,CAAMa,aAAcX,KAAKW,oB,GA9CvBV,aCAlBqB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a6c363ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n            <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td> \r\n                    <button onClick={ () => props.removeCharacter(index) }>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nclass Table extends Component{\r\n    render(){\r\n        const { characterData, removeCharacter } = this.props;\r\n        return(\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table","import React, { Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState;\r\n\r\n    handleChange = event =>{\r\n        const {name, value} = event.target;\r\n        this.setState({ [name]: value, })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n        return(\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange} />\r\n            <label htmlFor=\"job\">Job</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"job\"\r\n                id=\"job\"\r\n                value={job}\r\n                onChange={this.handleChange} />\r\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React, {Component} from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\n\r\nclass App extends Component{    \r\n    state = {\r\n        characters: [],\r\n    }\r\n    /*\r\n    Podemos declarar métodos especiais no componente de classe para executar algum código quando um componente é montado e desmontado\r\n    Estes métodos são chamados de “métodos de ciclo de vida”.\r\n    O método é executado depois que a saída do componente é renderizada no DOM\r\n        componentDidMount()\r\n        componentWillUnMount()\r\n        \r\n    componentDidMount(){\r\n        console.log('bla');\r\n    }\r\n\r\n    Ao renderizar App, teremos 'bla' no console automaticamente.\r\n    */    \r\n    \r\n    \r\n    removeCharacter = index => {\r\n        const { characters } = this.state;\r\n        this.setState({\r\n            characters : characters.filter((character, i) => {\r\n                return i !== index;\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = character => {\r\n        if(character.name){\r\n            this.setState({ characters: [...this.state.characters, character] })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { characters } = this.state;\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>React Tutorial</h1>\r\n                <p>Adicione um personagem e um trabalho.</p>\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter}/>\r\n                <h1>Adicionar novo</h1>\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,  \n    document.getElementById('root')\n);"],"sourceRoot":""}